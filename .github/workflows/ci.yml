name: CI
"on":
  pull_request: null
  push:
    branches:
      - main
  schedule:
    - cron: "0 3 * * 0 "
env:
  CI: true
  dist: ember-headlessui/dist
jobs:
  install_dependencies:
    name: Install Dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
  eslint:
    name: ESLint
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    strategy:
      fail-fast: true
      matrix:
        path:
          - ./ember-headlessui
          - ./test-app
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: ESLint
        run: cd ${{ matrix.path }} && pnpm run lint:js
  build:
    name: Build Tests
    needs:
      - install_dependencies
    timeout-minutes: 5
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Build and Assert Output
        run: |-
          echo 'target: ember-headlessui/dist
          setup:
            run: pnpm build
            cwd: ./ember-headlessui
          expect: |
            components/dialog.d.ts
            components/dialog.d.ts.map
            components/dialog.js
            components/dialog.js.map
            components/listbox.d.ts
            components/listbox.js
            components/listbox.js.map
            components/menu.d.ts
            components/menu.js
            components/menu.js.map
            components/switch.d.ts
            components/switch.js
            components/switch.js.map
            components/transition.d.ts
            components/transition.js
            components/transition.js.map
          ' >> assert-contents.config.yml
                        npx assert-folder-contents
      - uses: actions/upload-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
  tests:
    name: Default Tests
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember
  floating-deps-tests:
    name: Floating Deps Test
    timeout-minutes: 5
    runs-on: ubuntu-latest
    needs:
      - build
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - run: pnpm --filter test-app run test:ember
  try-scenarios:
    name: ${{ matrix.ember-try-scenario }}
    timeout-minutes: 10
    runs-on: ubuntu-latest
    needs:
      - tests
    strategy:
      fail-fast: true
      matrix:
        ember-try-scenario:
          - ember-3-25
          - ember-lts-3-28
          - ember-4-0
          - ember-4-4
          - ember-release
          - ember-beta
          - ember-canary
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies
        run: pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: test
        working-directory: ./test-app
        run: >-
          node_modules/.bin/ember try:one ${{ matrix.ember-try-scenario }}
          --skip-cleanup
  typescript-compatibility:
    name: ${{ matrix.typescript-scenario }}
    timeout-minutes: 5
    runs-on: ubuntu-latest
    continue-on-error: true
    needs:
      - build
    strategy:
      fail-fast: true
      matrix:
        typescript-scenario:
          - typescript@4.3
          - typescript@4.4
          - typescript@4.5
          - typescript@4.6
          - typescript@4.7
          - typescript@next
    steps:
      - uses: actions/checkout@v3
      - uses: volta-cli/action@v1
      - name: Cache pnpm modules
        uses: actions/cache@v3
        with:
          path: ~/.pnpm-store
          key: ${{ runner.os }}-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: ${{ runner.os }}-
      - uses: pnpm/action-setup@v2.2.2
        with:
          version: 7.1.2
      - name: Install Dependencies (without lockfile)
        run: rm pnpm-lock.yaml && pnpm install
      - name: Download built package from cache
        uses: actions/download-artifact@v3
        with:
          name: dist
          path: ${{ env.dist }}
      - name: Update TS Version
        run: pnpm add --save-dev ${{ matrix.typescript-scenario }}
        working-directory: ./test-app
      - name: Type checking
        run: |-
          pnpm --filter test-app exec tsc -v;
          pnpm --filter test-app exec tsc --build
